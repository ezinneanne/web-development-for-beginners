"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9713],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>m});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(o),p=r,m=d["".concat(l,".").concat(p)]||d[p]||h[p]||i;return o?n.createElement(m,a(a({ref:t},u),{},{components:o})):n.createElement(m,a({ref:t},u))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=o[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}p.displayName="MDXCreateElement"},7610:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=o(7462),r=(o(7294),o(3905));const i={sidebar_position:1},a="Introduction to Version control and Git",s={unversionedId:"Git/intro-to-git",id:"Git/intro-to-git",title:"Introduction to Version control and Git",description:"Version control came out of a need to retain one's previous and current work. In software development, version control systems are important because you could use them to save the different versions of your work and collaborate with others. Git is an example of a version control system. As a developer, you will need git to store and share your code whenever you desire.",source:"@site/docs/Git/intro-to-git.md",sourceDirName:"Git",slug:"/Git/intro-to-git",permalink:"/web-development-for-beginners/Git/intro-to-git",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Writing JavaScript",permalink:"/web-development-for-beginners/Calculator app/calculatorjs"},next:{title:"Introduction to GitHub",permalink:"/web-development-for-beginners/Git/intro-to-github"}},l={},c=[{value:"Introduction to Version control systems",id:"introduction-to-version-control-systems",level:2},{value:"Local version control system",id:"local-version-control-system",level:3},{value:"Centralised version control system",id:"centralised-version-control-system",level:3},{value:"Distributed version control system",id:"distributed-version-control-system",level:3},{value:"Introduction to Git",id:"introduction-to-git",level:2},{value:"How Git works",id:"how-git-works",level:3},{value:"Why Git?",id:"why-git",level:3},{value:"Getting started with Git",id:"getting-started-with-git",level:3}],u={toc:c};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction-to-version-control-and-git"},"Introduction to Version control and Git"),(0,r.kt)("p",null,"Version control came out of a need to retain one's previous and current work. In software development, version control systems are important because you could use them to save the different versions of your work and collaborate with others. Git is an example of a version control system. As a developer, you will need git to store and share your code whenever you desire.\nIn this section, you will learn about version control systems and git."),(0,r.kt)("h2",{id:"introduction-to-version-control-systems"},"Introduction to Version control systems"),(0,r.kt)("p",null,"So what is a version control system?\nAs I mentioned earlier, a version control system helps you to save different versions of your work and collaboration. Essentially, a version control system is a software tool that helps you track changes to your code over time. It allows you to revert to previous versions of your code, and collaborate with others on the same project. "),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"},"According to the git document"),", there are three types of version control systems and they are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Local version control system"),(0,r.kt)("li",{parentName:"ul"},"Centralised version control system "),(0,r.kt)("li",{parentName:"ul"},"Distributed version control system ")),(0,r.kt)("h3",{id:"local-version-control-system"},"Local version control system"),(0,r.kt)("p",null,"As the name implies, this runs on a local machine. So it saves the changes to your file on your machine and you can get a previous version of your file when you want to.\nSome examples of these local version control systems are Revision Control System (RCS), and Source Code Control System (SCSS)."),(0,r.kt)("h3",{id:"centralised-version-control-system"},"Centralised version control system"),(0,r.kt)("p",null,"Local version control systems are limited and do not offer many benefits like collaboration and this is where a centralised VCS comes in.\nA centralised version control system stores all of your files including the changes on a central server. "),(0,r.kt)("p",null,"When you use a CVCS, you will have a local copy of the repository on your computer. This copy is called a working copy. You can make changes to your code in your working copy, and then you can commit those changes to the central repository."),(0,r.kt)("p",null,"When you commit your changes, the CVCS will store a snapshot of your code in the central repository. This snapshot will include the changes you made, as well as the time and date of the commit, and the name of the person who made the commit.\nCollaboration is possible in CVCS because other users can download the latest version of the code from the central repository.\nA CVCS is ideal for small projects and also if the central server is down then the files become inaccessible.\nSome examples of CVCS are Subversion and Perforce."),(0,r.kt)("h3",{id:"distributed-version-control-system"},"Distributed version control system"),(0,r.kt)("p",null,"Distributed version control systems are ideal for all kinds of projects both large and small. This system consists of multiple servers which stores a repository history and every other detail about it. When developers are collaborating on a project, each developer will have a copy of the repository including every detail on their own computer. If there is a server failure, then when the server comes back up, a computer could easily send a copy of the repository lost previously. This is technically the best among all version control systems. Examples of DVCSs are Git and Mercurial. Git is a popular example of DVCS and that is what you will study in the remaining part of this doc."),(0,r.kt)("h2",{id:"introduction-to-git"},"Introduction to Git"),(0,r.kt)("p",null,"Git is a distributed version control system which was developed by Linus Torvalds (founder of Linux) out of a need to build a better and faster version control system for the Linux kernel development in the year 2005.\nGit is a free and open source software available on major operating systems."),(0,r.kt)("h3",{id:"how-git-works"},"How Git works"),(0,r.kt)("p",null,"Git works by storing a history of all changes that have been made to a project. This history is called a repository. The repository is divided into two parts: the working tree and the staging area. The working tree is the current state of the project, and the staging area is a temporary holding area for changes that you want to commit to the repository."),(0,r.kt)("p",null,"When you make a change to a file in the working tree, Git does not actually change the file. Instead, it creates a snapshot of the file before the change was made. This snapshot is called a commit. When you commit a change, Git stores the snapshot in the repository, along with a message describing the change."),(0,r.kt)("p",null,"You can also create branches in a Git repository. A branch is a copy of the repository that is independent of the main branch. This allows you to work on different features of a project without affecting the main branch. When you are finished working on a feature, you can merge the branch back into the main branch."),(0,r.kt)("h3",{id:"why-git"},"Why Git?"),(0,r.kt)("p",null,"Git is one example of a DVCS and you might be wondering why you should use git.\nWell, git is very popular and common to find among developers for a good reason - it is easy to learn, that's not all. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"It is efficient for both small and large projects."),(0,r.kt)("li",{parentName:"ul"},"It enables collaboration - even remote collaboration."),(0,r.kt)("li",{parentName:"ul"},"It also allows different workflows with different projects.")),(0,r.kt)("h3",{id:"getting-started-with-git"},"Getting started with Git"),(0,r.kt)("p",null,"So to set up git and start using it, you need to install it. You can ",(0,r.kt)("a",{parentName:"p",href:"https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"},"install git using this guide"),".\nAfter installing, run this command to confirm;"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git --version\n")),(0,r.kt)("p",null,"After running that, you need to set a username and email address on git. You can do that with the ",(0,r.kt)("inlineCode",{parentName:"p"},"git config")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'git config --global user.name "<your_username>"\n\n\ngit config --global user.email "<your_emailaddress>"\n')),(0,r.kt)("p",null,"That should set your username and email address.\nYou can also confirm it with ",(0,r.kt)("inlineCode",{parentName:"p"},"git config --list")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Creating a simple project"),"\nNow, we are going to create a simple project on Git. "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create a project folder."),(0,r.kt)("li",{parentName:"ol"},"Open a command line/terminal on your computer or you can use the terminal on VSCode."),(0,r.kt)("li",{parentName:"ol"},"Navigate to the folder on the command line using ",(0,r.kt)("inlineCode",{parentName:"li"},"cd name-of-project-folder"),"."),(0,r.kt)("li",{parentName:"ol"},"Initialise git in the project using ",(0,r.kt)("inlineCode",{parentName:"li"},"git init"),"."),(0,r.kt)("li",{parentName:"ol"},"Run ",(0,r.kt)("inlineCode",{parentName:"li"},"git status")," to confirm the status of git in the project.\nVoila! That's it, you have played around with git.\nIn the next doc page, you will use git to push your projects to a git service hub like GitHub. See you there!")))}d.isMDXComponent=!0}}]);