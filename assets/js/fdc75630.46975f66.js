"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5908],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(a),v=r,b=u["".concat(s,".").concat(v)]||u[v]||d[v]||l;return a?n.createElement(b,i(i({ref:t},c),{},{components:a})):n.createElement(b,i({ref:t},c))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=v;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}v.displayName="MDXCreateElement"},2229:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:3},i="Variables",o={unversionedId:"javascript/variables",id:"javascript/variables",title:"Variables",description:"In the previous section, you learned about how to add javascript to a html file. In this section, you will learn about variables.",source:"@site/docs/javascript/variables.md",sourceDirName:"javascript",slug:"/javascript/variables",permalink:"/web-development-for-beginners/javascript/variables",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Ways to add JavaScript",permalink:"/web-development-for-beginners/javascript/ways-to-add-js"},next:{title:"Variable naming rules and comments",permalink:"/web-development-for-beginners/javascript/variable-naming-rules"}},s={},p=[{value:"What is a variable ?",id:"what-is-a-variable-",level:2},{value:"Declaring variables",id:"declaring-variables",level:2},{value:"const",id:"const",level:3},{value:"let",id:"let",level:3},{value:"var",id:"var",level:3}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"variables"},"Variables"),(0,r.kt)("p",null,"In the previous section, you learned about how to add javascript to a html file. In this section, you will learn about variables."),(0,r.kt)("h2",{id:"what-is-a-variable-"},"What is a variable ?"),(0,r.kt)("p",null,"A variable is a placeholder in memory. In JavaScript, to access values you would need variables."),(0,r.kt)("h2",{id:"declaring-variables"},"Declaring variables"),(0,r.kt)("p",null,"There are three ways to declare variables in JavaScript which are: const, let and var."),(0,r.kt)("h3",{id:"const"},"const"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"const")," is used to declare a variable you cannot change. Changing the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"const")," will lead to an error."),(0,r.kt)("p",null,"Example,"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"main.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"const a = 1;\n\na = 3;          //this will result to an error \n")),(0,r.kt)("p",null,"To print a value on the JavaScript console. You use ",(0,r.kt)("inlineCode",{parentName:"p"},"console.log"),". "),(0,r.kt)("p",null,"To print the initial value would be: "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"main.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"console.log(a);           \n")),(0,r.kt)("h3",{id:"let"},"let"),(0,r.kt)("p",null,"You use ",(0,r.kt)("inlineCode",{parentName:"p"},"let")," to declare a variable you can change. But you cannot redeclare the same value with ",(0,r.kt)("inlineCode",{parentName:"p"},"let"),"."),(0,r.kt)("p",null,"Example,"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"main.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"let x = 1;\n\nconsole.log(x);       //1\n\nlet x = 11;          //this would give an error because x has been declared already \n")),(0,r.kt)("h3",{id:"var"},"var"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"var")," is an older version used in declaring variables. Unlike ",(0,r.kt)("inlineCode",{parentName:"p"},"let"),", var can be redeclared."),(0,r.kt)("p",null,"Example,"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"main.js")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"var y = 2;\n\nconsole.log(y);          //2\n\nvar y = 5;\nconsole.log(y);          //5\n")))}u.isMDXComponent=!0}}]);