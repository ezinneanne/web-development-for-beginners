"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4136],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var i=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=i.createContext({}),d=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=d(e.components);return i.createElement(o.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(t),c=l,h=m["".concat(o,".").concat(c)]||m[c]||u[c]||a;return t?i.createElement(h,r(r({ref:n},p),{},{components:t})):i.createElement(h,r({ref:n},p))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=c;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[m]="string"==typeof e?e:l,r[1]=s;for(var d=2;d<a;d++)r[d]=t[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5903:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=t(7462),l=(t(7294),t(3905));const a={sidebar_position:17},r="Media queries",s={unversionedId:"Css/media-queries",id:"Css/media-queries",title:"Media queries",description:"In this section, you will cover media queries.",source:"@site/docs/Css/media-queries.md",sourceDirName:"Css",slug:"/Css/media-queries",permalink:"/web-development-for-beginners/Css/media-queries",draft:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"CSS typography",permalink:"/web-development-for-beginners/Css/css-typography"},next:{title:"Flexbox",permalink:"/web-development-for-beginners/Css/flexbox"}},o={},d=[{value:"Using media queries in html",id:"using-media-queries-in-html",level:2},{value:"The <code>&lt;source&gt;</code> element",id:"the-source-element",level:3},{value:"The <code>&lt;link&gt;</code> element",id:"the-link-element",level:3},{value:"The <code>&lt;style&gt;</code> element",id:"the-style-element",level:3},{value:"Using media queries in javascript",id:"using-media-queries-in-javascript",level:2},{value:"Using media queries in css",id:"using-media-queries-in-css",level:2},{value:"The media queries syntax",id:"the-media-queries-syntax",level:2},{value:"The <code>@media</code>",id:"the-media",level:3},{value:"media types",id:"media-types",level:3},{value:"Features",id:"features",level:3}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"media-queries"},"Media queries"),(0,l.kt)("p",null,"In this section, you will cover media queries."),(0,l.kt)("p",null,"Media queries are used to make web pages responsive. When a webpage is responsive, it means you can render the web page on any device."),(0,l.kt)("p",null,"Media queries were introduced in css3."),(0,l.kt)("p",null,"Previously, developers used media types in css2. As css3 came out, media queries was introduced to accommodate the drawbacks of css2.\nDevelopers use media queries in css commonly but you can use css in html and javascript as well."),(0,l.kt)("h2",{id:"using-media-queries-in-html"},"Using media queries in html"),(0,l.kt)("p",null,"You can apply media queries in html using these elements:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"<source>")," element"),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"<link>")," element "),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"<style>")," element")),(0,l.kt)("h3",{id:"the-source-element"},"The ",(0,l.kt)("inlineCode",{parentName:"h3"},"<source>")," element"),(0,l.kt)("p",null,"You can use media queries in the ",(0,l.kt)("inlineCode",{parentName:"p"},"source")," element when specifying the particular size you would want to display an image on specified devices."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <title>A simple html page</title>\n    <link rel="stylesheet" href="styles.css"/>\n  </head>\n  <body>\n    <picture>\n      <source srcset="img/google_image.jpg" media="(min-width: 1200px)" />\n      \x3c!-- this will display for devices with a minimum width of 800px --\x3e\n      <source srcset="img/momentum.jpeg" media="(min-width: 800px)" />\n      \x3c!-- this will display for devices with a minimum width of 600px --\x3e\n      <source srcset="img/michelle.jpg" media="(min-width: 600px)" />\n      \x3c!-- this is the default value that will cover other devices not included previously --\x3e\n      <img src="img/google_image.png" alt="image of google chrome logo" />\n    </picture>\n  </body>\n</html>\n')),(0,l.kt)("p",null,"When you run the code, it should display the part running for your browser. "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"You can go to your browser settings."),(0,l.kt)("li",{parentName:"ul"},"Search for developer tools in the menu."),(0,l.kt)("li",{parentName:"ul"},"Select the responsive design mode(your browser might give it a different name)."),(0,l.kt)("li",{parentName:"ul"},"Use it to view the image using different device sizes.")),(0,l.kt)("p",null,"You will notice that the images change when the view port is at any of the specified widths."),(0,l.kt)("h3",{id:"the-link-element"},"The ",(0,l.kt)("inlineCode",{parentName:"h3"},"<link>")," element"),(0,l.kt)("p",null,"You can use media queries in the ",(0,l.kt)("inlineCode",{parentName:"p"},"link")," element too when linking css files to your html using the ",(0,l.kt)("inlineCode",{parentName:"p"},"media")," attribute. If you made different css files to accommodate various screen sizes, then you can link all of them to load for each of those screen sizes. "),(0,l.kt)("p",null,"Example;"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Create a folder and save as ",(0,l.kt)("inlineCode",{parentName:"li"},"css"),"."),(0,l.kt)("li",{parentName:"ul"},"Create a new css file in the folder and save as ",(0,l.kt)("inlineCode",{parentName:"li"},"small.css"),"."),(0,l.kt)("li",{parentName:"ul"},"Create another css file in the same folder and save as ",(0,l.kt)("inlineCode",{parentName:"li"},"big.css"),"."),(0,l.kt)("li",{parentName:"ul"},"Create another css file in the same folder and save as ",(0,l.kt)("inlineCode",{parentName:"li"},"all.css"),". "),(0,l.kt)("li",{parentName:"ul"},"In ",(0,l.kt)("inlineCode",{parentName:"li"},"small.css"),", add this code:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"body {\n   background: green;\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In ",(0,l.kt)("inlineCode",{parentName:"li"},"big.css"),", add this code:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"body {\n   background: red;\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In ",(0,l.kt)("inlineCode",{parentName:"li"},"all.css"),", add this code:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"body {\n   background: grey;\n}\n")),(0,l.kt)("p",null,"In your ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html"),", add this code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <title>A simple html page</title>\n    \x3c!-- Will load on all devices --\x3e\n    <link rel="stylesheet" href="css/all.css" media="all" />\n    \x3c!-- Will load on devices with a minimum width of 480px --\x3e\n    <link rel="stylesheet" href="css/small.css" media="(min-width: 480px)" />\n    \x3c!-- Will load on devices with a minimum width of 600px --\x3e\n    <link rel="stylesheet" href="css/big.css" media="(min-width: 600px)" />\n  </head>\n  <body>\n    \n  </body>\n</html>\n')),(0,l.kt)("p",null,"When you run it in your browser, you will see the different changes when you toggle across the screen sizes via developer tools."),(0,l.kt)("h3",{id:"the-style-element"},"The ",(0,l.kt)("inlineCode",{parentName:"h3"},"<style>")," element"),(0,l.kt)("p",null,"You can use media queries on the ",(0,l.kt)("inlineCode",{parentName:"p"},"style")," element as well. This is mostly done when you are using internal css in html."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\x3c!-- for internal css \u2013 ->\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <title>A simple html page</title>\n    <style>\n      body {\n        background-color: green;\n      }\n    </style>\n    \n    \n    <style media="screen and (min-width: 780px)">\n      body {\n        background-color: red;\n      }\n    </style> \n    \n  </head>\n  <body>\n    \n  </body>\n</html>\n')),(0,l.kt)("h2",{id:"using-media-queries-in-javascript"},"Using media queries in javascript"),(0,l.kt)("p",null,"You can use media queries in javascript using the ",(0,l.kt)("inlineCode",{parentName:"p"},"window.matchMedia()"),". The ",(0,l.kt)("inlineCode",{parentName:"p"},"matchMedia")," accepts a parameter which is the string describing the device size."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <title>A simple html page</title>\n  </head>\n  <body>\n    <p id="p1">This will change!</p>\n\n    <script>\n      let media = window.matchMedia( \'(min-width: 600px)\' );\n      \n      function myfunc(media){\n        if (window.innerWidth <= 600) {\n          document.getElementById("p1").innerHTML = "This has changed!";\n        }\n      }\n\n      myfunc(media);\n      media.addListener(myfunc);\n    <\/script>\n  </body>\n</html>\n')),(0,l.kt)("h2",{id:"using-media-queries-in-css"},"Using media queries in css"),(0,l.kt)("p",null,"You can apply media queries in css in the ",(0,l.kt)("inlineCode",{parentName:"p"},"@media rule")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," rule. Media queries are commonly used in the ",(0,l.kt)("inlineCode",{parentName:"p"},"@media")," rule to resize contents on the web page to fit different device sizes."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <title>A simple html page</title>\n    <link rel="stylesheet" href="css/styles.css"/>\n  </head>\n  <body>\n  </body>\n</html>\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"body {\n  background-color: purple;\n}\n\n/* This will load for devices between 600px and 900px width */\n@media only screen and (min-device-width: 600px) and (max-device-width: 900px) {\n  body {\n    background-color: blue;\n  }\n}\n")),(0,l.kt)("p",null,"This means the colour will change between 600px and 900px width."),(0,l.kt)("p",null,"You can also use media queries in the ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," rule."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"index.html")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8"/>\n    <title>A simple html page</title>\n    <link rel="stylesheet" href="css/styles.css"/>\n  </head>\n  <body>\n  </body>\n</html>\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'@import url("all.css") screen;\n')),(0,l.kt)("p",null,"However, you should avoid using ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," when writing css. This is because it loads slowly and will decrease your webpage performance. Some browsers also load html and javascript files first before loading ",(0,l.kt)("inlineCode",{parentName:"p"},"import")," in the browser. "),(0,l.kt)("h2",{id:"the-media-queries-syntax"},"The media queries syntax"),(0,l.kt)("p",null,"Having covered the various ways you could apply media queries in elements. Now, you will look at the syntax of media queries. So you can understand any media queries you see on a webpage."),(0,l.kt)("p",null,"Media queries are mostly written like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@media screen and (min-width: 600px)\n")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"@media - which is the media "),(0,l.kt)("li",{parentName:"ol"},"screen - which is the media type"),(0,l.kt)("li",{parentName:"ol"},"min-width: 600px - is the feature of the media ")),(0,l.kt)("h3",{id:"the-media"},"The ",(0,l.kt)("inlineCode",{parentName:"h3"},"@media")),(0,l.kt)("p",null,"This is the media rule for using media queries in css."),(0,l.kt)("h3",{id:"media-types"},"media types"),(0,l.kt)("p",null,"This is used to specify the kind of device the media rule should run."),(0,l.kt)("p",null,"The media types commonly used are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"screen"),(0,l.kt)("li",{parentName:"ul"},"print"),(0,l.kt)("li",{parentName:"ul"},"all"),(0,l.kt)("li",{parentName:"ul"},"speech")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Screen")),(0,l.kt)("p",null,"Screen media type works for devices with screens like computers, tablets, and phones."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@media screen {\n\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Print")),(0,l.kt)("p",null,"Print is intended for medias using print format to display content."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@media print {\n\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"All")),(0,l.kt)("p",null,"All is used to include all types of devices."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@media all {\n\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Speech"),"\nThis is used for devices that read out the content on a page. A good example is a screenreader."),(0,l.kt)("p",null,"Example,"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"@media speech {\n\n}\n")),(0,l.kt)("h3",{id:"features"},"Features"),(0,l.kt)("p",null,"Features or media features has to do with the qualities of devices you apply the media rule on. Examples of such features includes orientation,\ncolor, device-width, height, monochrome and so on.\nFeatures are applied to specify or describe details about the device."))}m.isMDXComponent=!0}}]);